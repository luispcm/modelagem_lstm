---
title: "MODELAGEM E PREVISÃO DO NÚMERO DE CASOS DE INTERNAÇÃO POR DOENÇAS DO APARELHO RESPIRATÓRIO NA CIDADE DE SÃO PAULO VIA LSTM"
author: "Luís Philipe Craveiro Mendes e Matheus Jun Onishi da Silva"
format: pdf
editor: visual
bibliography: "https://api.citedrive.com/bib/d73f78ec-e44c-4be4-b12f-8accf86f8d2e/references.bib?x=eyJpZCI6ICJkNzNmNzhlYy1lNDRjLTRiZTQtYjEyZi04YWNjZjg2ZjhkMmUiLCAidXNlciI6ICI4NzMwIiwgInNpZ25hdHVyZSI6ICJlN2IxNmEwMzBlNGNkZTA3OWJmZjg5MDM5Yzk0MDI2MzAyZGU1MTg5NTI3ZDllYmY3OTUzOWU5Mjk0MWRlMjczIn0="
---

# Introdução

Compreende-se que há uma estreita relação entre fatores climáticos e a saúde humana, especialmente no que se refere ao sistema respiratório. Condições climáticas adversas podem aumentar a ocorrência de internações hospitalares e, em casos mais graves, levar a óbitos [@A_Abdo_2012]. No Brasil, muitas cidades estão em processo de urbanização ou já apresentam intensa urbanização, o que agrava os problemas de saúde pública devido à formação de ilhas de calor, poluição atmosférica e outros fatores climáticos que contribuem para o aumento de doenças respiratórias [@S_C._2020].

Na saúde pública, prever o número de internações esperadas em um determinado período é essencial para o planejamento de recursos e a formulação de políticas. Além disso, compreender o impacto das variáveis explicativas no modelo é crucial para a identificação de medidas preventivas. Neste trabalho, entretanto, limitamo-nos ao desenvolvimento de um modelo capaz de prever o número de internações, utilizando uma classe de redes neurais apropriada para séries temporais e utilizando covariáveis climáticas como base efetiva para criação de políticas públicas e previsão de cenários de maior exigência dos serviços de sáudes para atender pacientes com problemas respiratórios.

O estudo concentra-se na modelagem e previsão do número de internações por doenças do sistema respiratório na cidade de São Paulo entre os anos de 2018 e 2019. Foram utilizadas como covariáveis a umidade relativa do ar, a temperatura e a concentração de material particulado fino ($PM_{2.5}$). Os dados de internações foram obtidos no DATASUS, enquanto as informações climáticas foram extraídas do Sistema Integrado de Serviços Ambientais (SISAM). Para a modelagem, foi empregado o modelo de redes neurais de Memória Longa de Curto Prazo (LSTM) [@L_Hochreiter_1997], devido à sua capacidade de capturar padrões temporais complexos nos dados.

# Materiais e Métodos

## Memória Longa de Curto Prazo (LSTM)

O LSTM é um tipo de rede neural da família de Redes Neurais Recorrentes que funcionam como uma espécie de diversos "mensageiros" que processam os dados que receberam, e transmitem isso para outros mensageiros. Isso cria uma espécie de memória que é compartilhada entre eles e pode fornecer bons resultados como saídas. Essa classe de redes neurais é utilizada em diversos contextos como trabalhos de tradução, reconhecimento de voz etc. [@Understanding_LSTM_networks].

Redes Neurais Recorrentes (RNNs) conseguem realizar boas previsões considerando o impacto de informações recentes, entretanto, quando há informações importantes disponíveis no histórico dos dados que impactam em previsões futuras em intervalos cada vez maiores, essa classe de redes neurais se torna ineficiente na tarefa de realizar previsões, visto que não conseguem resgatar esse termo longínguo que impacta a previsão desejada com eficiência. Ou seja, quanto maior o \textit{lag} entre a informação que deseja ser prevista e a informação relevante para tal previsão, menos capaz essa classe de redes realizar previsões precisas. [@L_Bengio_1994] explora essas ideais com mais detalhes. Porém, para o LSTM, o problema de resgatar dados históricos longíquos é solucionado.

O principal objetivo do LSTM é justamente conseguir manter a influência de dados passados em estimativas futuras. Diferentemente de redes neurais recorrentes padrões, ele tem uma estrutura mais complexa. Veja abaixo a ilustração de uma RNN padrão com a única função de ativação tangente hiperbólica:

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("RNN_padrao.png")
```

Agora veja a estrutura de um módulo do LSTM que será abordado com mais detalhes a diante:

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("estrutura_lstm.png")
```

### A Interconexão das Informações

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("interconexao_info.png")
```

Note, pela primeira figura acima considerando $C_{t-1}$ uma informação que está passando por um módulo, que $C_{t-1}$ passando por meio de transformações lineares. Primeiramente ele é multiplicado por uma saída de uma função de ativação sigmóide, ou seja, tal informação ganha um peso considerando valores entre 0 e 1, já que estes valores são a imagem da função sigmóide. Em seguida, $C_{t-1}$ passa por mais duas operações que veremos com mais detalhes futuramente. Por enquanto, foquemos nessa primeira operação.

A partir do que foi discutido, podemos entender que a função sigmóide filtra parte da informação contida em $C_{t-1}$ ao multiplicar por valores entre 0 e 1. Veja abaixo o destaque para essa operação inicial:

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("primeira_funcao.png")
```

Considerando isso, com base nos valores $h_{t-1}$ e $x_t$, ele decide o quanto de informação de $C_{t-1}$ irá passar por meio da função sigmóide, isto é, $f_t = \sigma(w_f[h_{t-1}, x_t] + \theta_f)$, o qual $w_f$ é um peso sináptico e $\theta_f$ é um viés. Após esse passo de filtro de quanta informação é útil, temos o segundo passo que é o processamento de uma nova informação que deve ser acrescentada a $C_{t-1}$.

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("segunda_funcao.png")
```

Esse novo processamento é feito por meio da função de ativação hiperbólica, isto é, $\tilde{C_t} = tanh(w_C[h_{t-1},x_t] + \theta_C)$, com peso sináptico e viés, respectivamente, $w_C$ e $\theta_C$ que é, assim como $C_{t-1}$, ponderada por meio da saída da função sigmóide $i_t = \sigma(w_i[h_{t-1},x_t] + \theta_i)$, com peso sináptico e viés, respectivamente, $w_i$ e $\theta_i$ que decide o quanto dessa nova informação será acrescentada a antiga ponderada $C_{t-1}f_t$. Após todo esse processo, ambas informações são somadas, gerando a nova informação $C_t = f_tC_{t-1} + i_t\tilde{C_t}$ que está ilustrada abaixo.

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("segunda_funcao_saida.png")
```

A partir da obtenção de $C_t$, temos tudo que precisamos para emitir a saída final, ela será o $C_t$ filtrado. Primeiramente, $C_t$ passa por uma função sigmóide a qual decide que informações estarão disponíveis na saíde, ou seja, há um filtro do que é menos e mais provável, já que a imagem desta função é para valores entre 0 e 1. Ao mesmo tempo, o mesmo $C_t$ passa por uma função tangente hiperbólica que tem imagem nos valores de -1 a 1. A saída da função tangente hiperbólica é multiplicada pela saída da função sigmóide, consequentemente a informação dada pela função tangente hiperbólica é filtrada. Esse processo final é ilutrado na figura abaixo.

```{r, fig.cap="Fonte: https://colah.github.io/posts/2015-08-Understanding-LSTMs/", fig.pos='H'}
#| echo: false
#| warning: false
#| message: false

knitr::include_graphics("saida_final.png")
```

Tal saída é disposta como uma resposta do modelo para um dado ponto e também é replicada para o módulo seguinte onde o processo irá se repetir para o tempo $t+1$.

## Base de Dados

Nesta aplicação, dedicamo-nos a apresentar o efeito da poluição, mais especificamente o efeito do material particulado fino ($PM_{2.5}$), juntamente com a umidade relativa do ar e a temperatura, no número de internações de pessoas com doenças do aparelho respiratório na cidade de São Paulo - SP, no período de 01/01/2018 a 30/11/2019. Os dados ambientais foram coletados por meio do Sistema Integrado de Serviços Ambientais (SISAM) e os dados sobre internações por doenças respiratórias foram obtidos por meio do DATASUS.

Ademais, na base de dados, o $PM_{2.5}$ era registrado a cada 12 horas em 2019 por meio das estações meteorológicas, enquanto a umidade e a temperatura, outras covariáveis utilizadas no modelo, eram registradas a cada 6 horas bem como o $PM_{2.5}$, mas somente em 2018. Considerando isso, calculamos a média diária de cada uma delas.

# Resultados

## Análise Descritiva

Abaixo pode ser visto o comportamento do número de internações de pessoas com doenças do aparelho respiratório.

```{r, fig.pos='H', out.width="90%", fig.align='center'}
#| echo: false
#| warning: false
#| message: false

base_resp = readRDS("base_resp.rds")
library(tidyverse)

ggplot(base_resp,
       aes(x = DT_INTER)) +
  geom_line(aes(y = casos_resp)) +
  labs(x = "Mês-Ano",
       y = "N° de internações",
       colour = "") +
  theme_minimal() +
  theme(axis.title = element_text(size = 12),
        axis.text = element_text(size = 12),
        legend.text=element_text(size= 12),
        legend.title = element_text(size = 12),
        axis.text.x = element_text(angle = 90,
                                   vjust = 0.5),
        axis.title.y = element_text(size = 12)) +
  scale_x_date(labels = scales::date_format("%b-%Y"),
               breaks = seq(from = min(base_resp$DT_INTER),
                            to = max(base_resp$DT_INTER),
                            by = "1 month"))
```

Nota-se que os períodos de maiores concentrações dos poluentes estão nos meios dos anos.

Abaixo temos a umidade relativa do ar:

```{r, fig.pos='H', out.width="90%", fig.align='center'}
#| echo: false
#| warning: false
#| message: false

ggplot(base_resp,
       aes(x = DT_INTER)) +
  geom_line(aes(y = umidade_relativa_percentual_media)) +
  labs(x = "Mês-Ano",
       y = "Umidade Relativa do Ar (%)",
       colour = "") +
  theme_minimal() +
  theme(axis.title = element_text(size = 12),
        axis.text = element_text(size = 12),
        legend.text=element_text(size= 12),
        legend.title = element_text(size = 12),
        axis.text.x = element_text(angle = 90,
                                   vjust = 0.5),
        axis.title.y = element_text(size = 12)) +
  scale_x_date(labels = scales::date_format("%b-%Y"),
               breaks = seq(from = min(base_resp$DT_INTER),
                            to = max(base_resp$DT_INTER),
                            by = "1 month"))
```

Com altas porcentagens principalmente no ano de 2018, com um comportamento atípico.

Já para a temperatura média diária, temos:

```{r, fig.pos='H', out.width="90%", fig.align='center'}
#| echo: false
#| warning: false
#| message: false

ggplot(base_resp,
       aes(x = DT_INTER)) +
  geom_line(aes(y = temperatura_c_media)) +
  labs(x = "Mês-Ano",
       y = "Temperatura (°C)",
       colour = "") +
  theme_minimal() +
  theme(axis.title = element_text(size = 12),
        axis.text = element_text(size = 12),
        legend.text=element_text(size= 12),
        legend.title = element_text(size = 12),
        axis.text.x = element_text(angle = 90,
                                   vjust = 0.5),
        axis.title.y = element_text(size = 12)) +
  scale_x_date(labels = scales::date_format("%b-%Y"),
               breaks = seq(from = min(base_resp$DT_INTER),
                            to = max(base_resp$DT_INTER),
                            by = "1 month"))
```

Na Figura acima, podemos ver claramente os períodos de inverno e verão de acordo com o comportamento bem definido.

Por fim, podemos visualizar essas variáveis em um mesmo gráfico, onde as séries estão padronizadas pelos seus máximos, dessa forma elas ficam no intervalo \[0,1\]:

```{r, fig.pos='H', out.width="90%", fig.align='center'}
#| echo: false
#| warning: false
#| message: false

ggplot(base_resp,
       aes(x = DT_INTER)) +
  geom_line(aes(y = pm25_ugm3_medio/max(pm25_ugm3_medio),
                color = "pm25")) +
  geom_line(aes(y = umidade_relativa_percentual_media/(max(umidade_relativa_percentual_media)),color = "umidade")) +
  geom_line(aes(y = casos_resp/(max(casos_resp)),color = "Y")) +
  geom_line(aes(y = temperatura_c_media/(max(temperatura_c_media)),color = "temperatura")) +
  labs(x = "Mês-Ano",
       y = "",
       colour = "") +
  theme_minimal() +
  theme(axis.title = element_text(size = 12),
        axis.text = element_text(size = 12),
        legend.text=element_text(size= 7),
        legend.title = element_text(size = 12),
        axis.text.x = element_text(angle = 90,
                                   vjust = 0.5),
        legend.position = "bottom") +
  scale_x_date(labels = scales::date_format("%b-%Y"),
               breaks = seq(from = min(base_resp$DT_INTER),
                            to = max(base_resp$DT_INTER),
                            by = "1 month")) +
  scale_color_manual(values = c("pm25" = "green",
                                "Y" = "black",
                                "umidade" = "darkblue",
                                "temperatura" = "red"),
                     labels = c(expression(paste("PM2,5 (", mu, "g/m"^3,")")),
                                "Temperatura (°C)",
                                "Umidade Relativa do Ar (%)",
                                "N° de internações"))
```

## LSTM

| **Modelo Ajustado** |  lag  |   RMSE    |  $R^2$   |    MAE    |
|:-------------------:|:-----:|:---------:|:--------:|:---------:|
|    **Ajuste 1**     |   1   |   40,27   |   0,14   |   32,41   |
|    **Ajuste 2**     |   2   |   37,25   |   0,32   |   30,16   |
|    **Ajuste 3**     |   3   |   37,29   |   0,29   |   30,41   |
|    **Ajuste 4**     | **7** | **33,21** | **0,43** | **26,40** |

| 

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 10
#| fig.height: 8
load("LSTM.Rdata")

par(mfrow = c(2, 2)) 
plot(x = base$DT_INTER[1:N],y = Y[1:N],type = "l",ylab = "N internação",xlab = "data")
abline(v = base$DT_INTER[k], col = "purple", type = "l", lwd = 2)
points(x= base$DT_INTER[1:N],y=pred,col="red",type = "l",) # Mod 1
legend("topright", legend = c("Observado", "Previsão Ajuste 1"), col = c("black", "red"), lty = 1, cex = 0.8)

plot(x = base$DT_INTER[1:N],y = Y[1:N],type = "l",ylab = "N internação",xlab = "data")
abline(v = base$DT_INTER[k], col = "purple", type = "l", lwd = 2)
points(x=base$DT_INTER[1:N],y=pred2,col="blue",type = "l") # Mod 2
legend("topright", legend = c("Observado", "Previsão Ajuste 2"), col = c("black", "blue"), lty = 1, cex = 0.8)


plot(x = base$DT_INTER[1:N],y = Y[1:N],type = "l",ylab = "N internação",xlab = "data")
abline(v = base$DT_INTER[k], col = "purple", type = "l", lwd = 2)
points(x=base$DT_INTER[1:N],y=pred3,col="orange",type = "l")
legend("topright", legend = c("Observado", "Previsão Ajuste 3"), col = c("black", "orange"), lty = 1, cex = 0.8)

plot(x = base$DT_INTER[1:N],y = Y[1:N],type = "l",ylab = "N internação",xlab = "data")
abline(v = base$DT_INTER[k], col = "purple", type = "l", lwd = 2)
points(x=base$DT_INTER[1:N],y=pred4,col="green",type = "l")
legend("topright", legend = c("Observado", "Previsão Ajuste 4"), col = c("black", "green"), lty = 1, cex = 0.8)

```

Pelo grafico e métricas calculadas pelas previsões obtidas pelos respectivos ajustes do modelo LSTM, pode-se reparar que o modelo ajustado que apresentou **maior capacidade preditiva** do número de internações foi o modelo ajustado pelo **Ajuste 4**, com um l**ag = 7**. Percebe-se também que a dimiuição do lag utilizado no ajuste do modelo resultou em uma menor performance apresentada pelo modelo LSTM, demonstrando que para estimar o número de internação em um determinado momento deve-se analisar o número de internação e suas covariáveis antes desse momento. Devido ao melhor ajuste possuir um lag = 7, analisa-se os dados disponíveis em 7 dias atrás do momento de previsão de interesse

# Conclusão

O presente estudo demonstrou a eficácia do modelo LSTM na previsão do número de internações hospitalares, evidenciando a importância de ajustar adequadamente os parâmetros do modelo para alcançar melhores resultados preditivos. A análise dos diferentes ajustes indicou que a escolha do lag desempenha um papel crucial no desempenho do modelo, com o ajuste que utilizou um lag de 7 dias (Ajuste 4) apresentando a maior capacidade preditiva.

Além disso, os resultados reforçam a relevância de considerar o histórico temporal das internações e suas covariáveis para compreender padrões e tendências nos dados. Esse aspecto é essencial para o desenvolvimento de estratégias preditivas robustas e para subsidiar decisões informadas no planejamento e gerenciamento de recursos hospitalares.

Portanto, conclui-se que modelos baseados em redes neurais recorrentes, como o LSTM, são ferramentas promissoras para aplicação em problemas de séries temporais na área da saúde, possibilitando não apenas maior precisão nas previsões, mas também oferecendo suporte valioso para a melhoria da gestão hospitalar e a otimização de políticas públicas voltadas ao atendimento de demandas futuras.

# Referências

::: {#refs}
:::
